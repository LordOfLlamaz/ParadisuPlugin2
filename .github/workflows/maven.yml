# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get previous tag
      id: get-previous-tag
      uses: actions-ecosystem/action-get-latest-tag@v1
    - name: Get SNW Version from plugin.yml
      id: lookupSNWVersion
      uses: mikefarah/yq@master
      with:
        cmd: yq eval '.version' 'src/main/resources/plugin.yml'
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.5
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: ''
        custom_tag: ${{ steps.lookupSNWVersion.outputs.result }}
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 16
        java-package: jdk
        architecture: x86
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SNW_VERSION: ${{ steps.lookupSNWVersion.outputs.result }}
      run: mvn -Drevision=${SNW_VERSION} clean package
    - run: mkdir staging && cp target/*.jar staging
    - uses: actions/upload-artifact@v2
      with:
        name: ParadisuPlugin-Latest
        path: staging/ParadisuPlugin-*.jar
    - name: Generate release diff
      env:
        BEGIN_COMMIT: ${{ steps.get-previous-tag.outputs.tag }}
        END_COMMIT: ${{ steps.lookupSNWVersion.outputs.result }}
      run: git fetch --tags --force && git log --pretty=format:"* %s (%h)" ${BEGIN_COMMIT}..${END_COMMIT} > release_notes.md
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        artifacts: staging/ParadisuPlugin-*.jar
        allowUpdates: true
        bodyFile: "release_notes.md"
        draft: false
        prerelease: false
        tag: ${{ steps.lookupSNWVersion.outputs.result }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload jar to server
      env:
        PTERODACTYL_TOKEN: ${{ secrets.PTERODACTYL_TOKEN }}
      run: |
        cp staging/ParadisuPlugin-*.jar ParadisuPlugin.jar && upload_url=$(curl "https://panel.disneyland.network/api/client/servers/978fd706/files/upload" -H "Authorization: Bearer ${PTERODACTYL_TOKEN}" -X GET -s | jq -r .attributes.url) && curl -F files=@ParadisuPlugin.jar "${upload_url}&directory=/plugins"
